<launch>

    <arg name="rtabmapviz" default="true" />
    <arg name="cell_size" default="0.05" />

    <!-- Pointcloud to laserscan conversion for slam -->
    <node name="pointcloud_to_laserscan_node" pkg="pointcloud_to_laserscan"
        type="pointcloud_to_laserscan_node" respawn="false" output="screen">
        <remap from="/cloud_in" to="/velodyne_points" />
        <param name="min_height" value="-0.3" /> <!-- in meters -->
        <param name="max_height" value="0.3" /> <!-- in meters -->
        <param name="angle_min" value="-3.14" /> <!-- in rads -->
        <param name="angle_max" value="3.14" /> <!-- in rads -->
        <param name="range_min" value="1.2" /> <!-- in meters -->
        <param name="range_max" value="10" /> <!-- in meters -->
        <param name="use_inf" value="false" />
    </node>

    <group ns="markhor">
        <!-- RobotLocalization (Sensor fusion) and tf -->
        <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization"
            clear_params="true">
            <rosparam command="load" file="$(find markhor_slam)/config/ekf_localization.yaml" />
        </node>
    </group>

    <arg name="lidar_args"
        default="
      --Reg/Strategy 1
      --RGBD/NeighborLinkRefining true
      --Grid/CellSize $(arg cell_size)
      --Icp/PointToPlaneRadius 0
      --Icp/MaxTranslation 1" />

    <!---
    Run rtabmap -->
    <remap from="/rtabmap/grid_map" to="/map" />
    <include file="$(find rtabmap_ros)/launch/rtabmap.launch">
        <!-- Allows republishing of wifi data points -->
        <arg name="user_data_async_topic" value="/wifi_signal" />
        <!-- create new map -->
        <arg name="args"
            value="--Reg/Force3DoF $(arg lidar_args) -d" />
        <arg name="imu_topic" value="/vectornav/IMU" />
        <arg name="odom_topic" value="/markhor/odometry/filtered" />
        <arg name="frame_id" value="base_link" />
        <arg name="rtabmapviz" value="$(arg rtabmapviz)" />

        <!-- 2D LiDAR -->
        <arg name="subscribe_scan" value="true" />
        <arg name="scan_topic" value="/scan" />


        <!-- icp_odometry -->
        <arg name="icp_odometry" value="true" />
        <arg name="odom_guess_frame_id" value="odom" />
        <arg name="vo_frame_id" value="icp_odom" />
        <arg name="depth" value="false" />

    </include>
</launch>