<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="markhor">

    <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro" />
    <xacro:VLP-16 name="laser" gpu="true">
        <origin xyz="-0.2875 0 0.45176" rpy="0 0 0" />
    </xacro:VLP-16>
    <xacro:include filename="$(find markhor_description)/urdf/markhor_common.xacro" />

    <xacro:arg name="robot_namespace" default="markhor" />

    <xacro:property name="tracks_shift_x" value="0.31115000" />
    <xacro:property name="tracks_shift_y" value="0.2230283" />
    <xacro:property name="tracks_height" value="0.05318760" />
    <xacro:property name="tracks_seperation" value="${tracks_shift_y} * 2" />

    <link name="base_footprint" />
    <link name="base_link" />

    <link name="base_body">
        <visual>
            <geometry>
                <mesh filename="package://markhor_description/meshes/mk_link_base.stl" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 ${pi} 0" />
            <material name="red"/>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://markhor_description/meshes/mk_link_base.stl" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 ${pi} 0" />
        </collision>
        <xacro:markhor_inertial type="body" />
    </link>

    <link name="tower_body">
        <visual>
            <geometry>
                <mesh filename="package://markhor_description/meshes/LidarTower.stl" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 -${pi/2}" />
            <material name="grey"/>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://markhor_description/meshes/LidarTower.stl" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 -${pi/2}" />
        </collision>
        <xacro:markhor_inertial type="body" />
    </link>

    <joint name="tower_body_j" type="fixed">
        <parent link="base_link" />
        <child link="tower_body" />
    </joint>

    <joint name="base_link_j" type="fixed">
        <origin xyz="0 0 -0.085" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="base_footprint" />
    </joint>


    <joint name="base_body_j" type="fixed">
        <parent link="base_link" />
        <child link="base_body" />
    </joint>

    <xacro:flipper flipper_name="flipper_fl" origin_xyz="${tracks_shift_x} ${tracks_shift_y} ${tracks_height}" origin_rpy="${pi/2} 0 ${-pi/2}" />
    <xacro:flipper flipper_name="flipper_fr" origin_xyz="${tracks_shift_x} -${tracks_shift_y} ${tracks_height}" origin_rpy="${pi/2} 0 ${-pi/2}" />
    <xacro:flipper flipper_name="flipper_rl" origin_xyz="-${tracks_shift_x} ${tracks_shift_y} ${tracks_height}" origin_rpy="${pi/2} 0 ${pi/2}" />
    <xacro:flipper flipper_name="flipper_rr" origin_xyz="-${tracks_shift_x} -${tracks_shift_y} ${tracks_height}" origin_rpy="${pi/2} 0 ${pi/2}" />

    <xacro:camera_link link_name="front_cam" camera_name="$(arg robot_namespace)/front_cam" frame_name="front_cam" parent="base_link" origin_xyz="0.35864800 0 0.03810000" origin_rpy="0 0 0" />
    <xacro:camera_link link_name="rear_cam" camera_name="$(arg robot_namespace)/rear_cam" frame_name="rear_cam" parent="base_link" origin_xyz="-0.35864800 0 0.03810000" origin_rpy="0 0 ${pi}" />

    <xacro:virtual_anchor anchor_name="arm_root" parent="base_link" origin_xyz="0.3 0 0.12291060" origin_rpy="0 0 0" />


    <gazebo reference="flipper_fl">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="flipper_fr">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="flipper_rl">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="flipper_rr">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="flipper_rr">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="base_body">
        <material>Gazebo/Red</material>
    </gazebo>

    <gazebo reference="tower_body">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/$(arg robot_namespace)/flippers</robotNamespace>
        </plugin>

        <plugin filename="libSimpleTrackedVehiclePlugin.so" name="simple_tracked_vehicle">
            <body>base_link</body>
            <left_track>flipper_fl</left_track>
            <right_track>flipper_fr</right_track>
            <left_flipper>flipper_rl</left_flipper>
            <right_flipper>flipper_rr</right_flipper>
            <track_mu>0.65</track_mu>
            <track_mu2>0.85</track_mu2>
            <tracks_separation>${tracks_seperation}</tracks_separation>
            <robot_namespace>markhor</robot_namespace>
        </plugin>

        <plugin name='tracked_vehicle_interface' filename='libgazebo_ros_tracked_vehicle_interface.so'>
            <commandROSTopic>/markhor/tracks/diff_drive_controller/cmd_vel</commandROSTopic>
            <commandIGNTopic>~/markhor/cmd_vel_twist</commandIGNTopic>
            <odometryTopic>/markhor/tracks/diff_drive_controller/odom</odometryTopic>     <!-- ROS topic for the odometry data - remap if you're using another odom source -->
            
            <robotBaseFrame>base_link</robotBaseFrame>
            <odometryFrame>odom</odometryFrame>     <!-- tf frame of the odometry messages -->
            
            <tracks_separation>${tracks_seperation}</tracks_separation>
            <publishOdomTF>false</publishOdomTF> <!-- odom is now being published by markhor slam package -->
        </plugin>
    </gazebo>

</robot>
